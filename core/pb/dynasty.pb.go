// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dynasty.proto

/*
Package corepb is a generated protocol buffer package.

It is generated from these files:
	dynasty.proto

It has these top-level messages:
	Dynasty
	DynastyMeta
	DynastyCandidate
*/
package corepb

import (
	fmt "fmt"

	proto "github.com/gogo/protobuf/proto"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Dynasty struct {
	// dynasty meta
	Meta *DynastyMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	// candidate dynasty
	Candidate []*DynastyCandidate `protobuf:"bytes,2,rep,name=candidate" json:"candidate,omitempty"`
}

func (m *Dynasty) Reset()                    { *m = Dynasty{} }
func (m *Dynasty) String() string            { return proto.CompactTextString(m) }
func (*Dynasty) ProtoMessage()               {}
func (*Dynasty) Descriptor() ([]byte, []int) { return fileDescriptorDynasty, []int{0} }

func (m *Dynasty) GetMeta() *DynastyMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Dynasty) GetCandidate() []*DynastyCandidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

type DynastyMeta struct {
	// ChainID.
	ChainId uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (m *DynastyMeta) Reset()                    { *m = DynastyMeta{} }
func (m *DynastyMeta) String() string            { return proto.CompactTextString(m) }
func (*DynastyMeta) ProtoMessage()               {}
func (*DynastyMeta) Descriptor() ([]byte, []int) { return fileDescriptorDynasty, []int{1} }

func (m *DynastyMeta) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type DynastyCandidate struct {
	// effective dynasty
	Serial uint64 `protobuf:"varint,1,opt,name=serial,proto3" json:"serial,omitempty"`
	// dpos dynasty address
	Dynasty []string `protobuf:"bytes,2,rep,name=dynasty" json:"dynasty,omitempty"`
}

func (m *DynastyCandidate) Reset()                    { *m = DynastyCandidate{} }
func (m *DynastyCandidate) String() string            { return proto.CompactTextString(m) }
func (*DynastyCandidate) ProtoMessage()               {}
func (*DynastyCandidate) Descriptor() ([]byte, []int) { return fileDescriptorDynasty, []int{2} }

func (m *DynastyCandidate) GetSerial() uint64 {
	if m != nil {
		return m.Serial
	}
	return 0
}

func (m *DynastyCandidate) GetDynasty() []string {
	if m != nil {
		return m.Dynasty
	}
	return nil
}

func init() {
	proto.RegisterType((*Dynasty)(nil), "corepb.Dynasty")
	proto.RegisterType((*DynastyMeta)(nil), "corepb.DynastyMeta")
	proto.RegisterType((*DynastyCandidate)(nil), "corepb.DynastyCandidate")
}

func init() { proto.RegisterFile("dynasty.proto", fileDescriptorDynasty) }

var fileDescriptorDynasty = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xa9, 0xcc, 0x4b,
	0x2c, 0x2e, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xce, 0x2f, 0x4a, 0x2d,
	0x48, 0x52, 0xca, 0xe2, 0x62, 0x77, 0x81, 0x48, 0x08, 0xa9, 0x73, 0xb1, 0xe4, 0xa6, 0x96, 0x24,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x09, 0xeb, 0x41, 0x54, 0xe8, 0x41, 0xa5, 0x7d, 0x53,
	0x4b, 0x12, 0x83, 0xc0, 0x0a, 0x84, 0xcc, 0xb8, 0x38, 0x93, 0x13, 0xf3, 0x52, 0x32, 0x53, 0x12,
	0x4b, 0x52, 0x25, 0x98, 0x14, 0x98, 0x35, 0xb8, 0x8d, 0x24, 0xd0, 0x54, 0x3b, 0xc3, 0xe4, 0x83,
	0x10, 0x4a, 0x95, 0x34, 0xb8, 0xb8, 0x91, 0x0c, 0x13, 0x92, 0xe4, 0xe2, 0x48, 0xce, 0x48, 0xcc,
	0xcc, 0x8b, 0xcf, 0x4c, 0x01, 0xdb, 0xc9, 0x1b, 0xc4, 0x0e, 0xe6, 0x7b, 0xa6, 0x28, 0xb9, 0x70,
	0x09, 0xa0, 0x1b, 0x24, 0x24, 0xc6, 0xc5, 0x56, 0x9c, 0x5a, 0x94, 0x99, 0x98, 0x03, 0x56, 0xcc,
	0x12, 0x04, 0xe5, 0x09, 0x49, 0x70, 0xb1, 0x43, 0xbd, 0x06, 0x76, 0x0b, 0x67, 0x10, 0x8c, 0x9b,
	0xc4, 0x06, 0xf6, 0xaa, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x0d, 0x40, 0xa3, 0xfb, 0x00,
	0x00, 0x00,
}
