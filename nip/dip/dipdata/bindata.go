// Code generated by go-bindata.
// sources:
// dip_data.json
// DO NOT EDIT!

package dipdata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dip_dataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7c\x47\xaf\x1b\x39\x97\xf6\x7f\xb9\xeb\x5e\x90\x87\x27\xf0\xf4\x4e\xb1\x04\x25\x28\xa7\xc1\xe0\x83\x72\x42\x29\xab\x14\x06\xf3\xdf\x3f\x94\x7b\xd3\xb2\x0a\xb6\x2f\xec\xba\xef\x6c\x7a\xd1\xb0\x4d\x8a\x45\x3e\xe1\x9c\x87\xfc\xaf\xff\xf9\x38\x5f\xc6\xa7\xcb\xff\x5b\xcd\xd7\xcb\xd5\xe5\xe3\xef\x0f\x70\x46\x8c\x31\x1f\x7f\x7d\xcc\x77\xb3\x7f\xff\x6f\x14\x67\xf5\xe3\xaf\x8f\x68\x7e\x3a\xaf\xf7\xbb\x8f\xbf\x3f\xec\xc7\x5f\x1f\xb3\xf5\xe1\xfc\xf1\xf7\x7f\xfd\xcf\xc7\x78\x36\x3b\xcd\xcf\xe7\x8f\xbf\x3f\x76\xb6\xff\x58\xed\xa2\x5d\xb6\x57\x7c\x14\x03\x17\x4c\x22\xb9\x14\x1b\x6b\x8d\x06\xcf\x4e\x3f\x93\xdf\xef\xed\xea\xe3\xaf\x8f\xe9\x7e\x77\x39\x8d\xa7\x97\x6f\x7f\xe1\x66\xbb\x23\x58\xf6\x57\x8d\x39\x1f\x0f\x7e\x52\x6d\xe1\xed\xbc\x20\x10\x2a\xe7\x36\x76\x56\xcf\xc5\x23\x9d\xe6\xb7\xf1\x69\xf6\xf1\xf7\x87\x77\x86\xbd\x11\x07\xa2\xe8\xfd\xc7\xff\xfe\xf5\x3a\xf8\x68\xf4\x1c\x2f\x06\xb3\x6b\xbb\xb3\xc2\xfc\xb1\xb1\x59\x60\xed\x51\x96\x3d\x0e\x66\x50\xf0\x85\xc2\x00\xbf\x1f\xfc\xe1\x94\x56\xfd\xfe\xa0\xd7\xbd\x3d\x65\xd6\x0f\x64\xb2\xd9\x74\x4e\xd7\xd3\x76\x91\x5f\xd6\x27\xab\xd5\xee\xdf\x83\x5b\x72\xea\x51\x98\x00\xd0\x00\x5b\x0b\x6f\x13\xe8\x8d\x57\xe7\xd9\x63\x54\x9b\x2f\x4f\xbd\x93\xde\x26\x9c\x0f\xa7\xab\x75\x63\x5c\xd8\xcd\x2a\xa3\xfd\x7c\x30\xff\x7e\x02\x3b\x2a\x4e\x2f\xdb\xcd\x1d\x0e\x19\x59\x57\x07\xfe\xb4\x6c\x3d\x72\x63\xe9\x55\xd6\xbb\xa0\x58\x9f\x6b\xe9\x65\x02\x60\x8d\x77\x46\x1d\x7a\x06\x10\x04\x07\xee\x7d\x0e\xb3\x63\xae\x3a\x6d\x97\xf7\x85\x26\x04\xe3\xc7\xa8\xd0\x3a\x34\x4b\xa3\x6c\x65\xd2\x99\xec\x4e\xa7\x65\xa5\x7f\xfc\x6e\x0e\x00\x0b\xdf\xab\x94\xdd\x23\x7c\x1e\x32\x25\x5c\x8f\xfa\xe5\x6a\xb7\x30\xa8\x65\x73\x9d\x88\xa7\x93\x76\x51\xff\x3d\x07\x41\x64\x05\xcf\x5e\xd1\x1a\xcf\xf2\x3e\x7e\xc7\xab\x5d\xc8\x33\x13\xac\xaa\xa7\xc7\x0a\x68\x1f\x6e\xef\xdb\xf3\xa5\x7b\x3e\xe6\x36\xd5\xb0\x0c\xc1\xf7\x6b\xb0\x5a\xf7\x03\xc9\xcd\x7d\x69\xd5\x19\x97\x83\x67\xbb\xbc\xcf\x8c\xcb\x7a\xb3\xb9\xf2\x4c\xf2\x7b\x38\x85\xff\x1e\xdf\xbc\x8d\x37\x28\xd4\xee\xd1\x63\x7e\xbc\x50\x3b\x3f\x3a\x4c\x57\x8b\x5b\xa6\x35\x1e\x74\x1b\x54\x98\x8f\x86\xa1\xe7\xe8\xfb\xf1\x9e\xdd\xfa\x71\x9e\x6d\x44\xe7\xc7\xe9\x46\xcf\xfb\x41\xc3\xca\x34\x3f\xab\x76\x36\xd7\x71\xa1\x2a\x67\xf7\xf2\x7b\x1d\x1b\xb6\xe0\xc4\x58\x63\x40\xbd\x58\x6b\xf0\x6d\x0a\xf5\xf6\x35\xcc\x17\x3b\xa8\xfd\x70\xbf\x1d\x3a\x5e\xe6\x10\xee\xb7\xe2\xfd\x70\x2a\x75\x4f\x97\xe6\xa0\xf3\xfd\x14\x16\x8d\x49\x6e\x99\x83\xe0\x82\x99\xec\xf4\x3e\x9b\x67\x7b\x93\x61\x23\xe2\x72\xa9\xde\x2b\x97\x21\xe0\xe3\xcb\xa6\x57\xa3\x4a\x18\x7f\x6c\x6b\xbd\x78\x7c\x5f\x83\xe2\x29\xcc\xdc\xb2\x95\xe9\x89\x8b\xed\x7e\xd5\xd6\xeb\xab\x63\x16\xb8\xd5\x7c\xcc\xf7\xd1\x2d\xda\x4d\x6f\x6f\x1b\x3f\xd7\xcd\x15\x73\x87\xea\x73\x33\x84\x82\xac\xb3\x85\x6c\xfd\xd2\x1c\x4e\xc3\x6b\x35\xfb\x6c\xee\x6b\xf7\xec\xcb\xbe\x33\xca\x28\xec\x99\xc4\x81\x15\x42\x86\xf7\x35\xe8\xd4\x4f\x1a\x94\xc3\x6c\xbe\x32\x2a\x16\xce\x5b\x1b\xe4\x0a\x93\xeb\xea\x5a\xab\x4c\x8a\xd4\x5e\x74\xb6\xc3\xd7\x29\xbc\xfc\xfb\x6a\x8c\x57\x11\x25\x14\x35\xd6\x5a\x31\x62\x1d\x7f\xfc\xef\x7f\xff\xf5\x31\x3f\x9d\xe2\x3f\x1d\x8f\xf6\x86\x56\x28\x0e\x12\xd0\xca\x0b\xbb\x5f\x44\xab\x74\x01\x03\x8c\xf1\xcc\xc8\x8e\xd8\x31\xa2\xc2\x3b\x62\xcd\x6c\x2d\x37\x9c\x4d\x82\xd2\xb8\xb2\xbc\xe4\xed\xa2\xb2\xa9\x9e\x4e\xc3\xd9\x64\x28\xcb\x72\xe6\x5c\x3c\x2f\xbe\x9f\xc0\x51\x68\xef\xfa\x76\xbc\x0d\xa5\xa4\xc7\xe2\xe4\xde\x0c\x8a\xdd\xc7\x52\xc6\x2d\xde\xbb\xeb\x6a\x30\x7e\xd9\x39\x1e\x50\xc1\xbc\xef\x97\xde\xa4\x11\x9e\xc2\xeb\x31\xb7\xab\xd0\x65\x51\x1c\xca\x56\x36\x95\x75\xc9\xee\x1b\xb8\x2a\x6d\x4a\xe7\xb7\xfd\xb2\xcd\x8c\xfb\xcf\x71\xb1\x39\xce\xf9\x61\xe6\x7e\x08\x31\x6a\x1c\xb3\x70\xc3\xdb\xc3\x05\xb5\xb0\xb4\xa5\x97\xef\x89\x2c\xaa\x88\xc8\xe0\xe2\xcf\xf8\xdd\xe0\xad\x0c\xcd\x6d\xae\x9f\x2d\x35\x16\xc1\xe3\x59\x58\x2e\x1f\xcd\xfa\x75\x00\xe7\xa0\x4e\xcb\xe3\xf2\x7c\xea\xbf\x0d\x8e\x7a\x78\xc0\x2e\xac\xde\x8b\xdb\xf3\x3c\x37\x38\xfa\xa8\x78\x7d\x5c\x6a\x2e\xbc\xd5\x56\xeb\x72\xef\x65\xd1\x59\x95\xd1\x90\x05\x4a\xc0\xe7\xcf\x0e\x0d\xf6\xb2\x79\xe6\x2a\xbd\x8c\xb4\x1f\xd7\xa1\xc7\xbc\x1b\xdd\x6a\xb9\xfa\x21\xac\x77\x67\x76\x3e\x39\x97\x96\xff\x1e\x5a\x9d\x30\x90\x03\x8b\x09\xb0\xf8\xe9\x5f\x3d\x3b\xdd\x2b\x7b\xac\xec\x5a\xe3\xfe\x79\x57\x1d\x97\xed\x68\xb7\xc5\xe7\x84\xb9\x5e\x6d\x51\x7d\x36\xdd\xbf\xfc\x6a\x36\x56\xbd\x61\xb4\x09\x9b\xac\xb0\xaf\x9f\xcb\xf5\x41\x60\x2f\x75\xf7\xd4\x53\xb4\xb9\x35\x2a\xfb\xec\x60\x52\xae\x1d\x33\x9b\xb0\xd0\xce\x7d\x3f\xf4\xf2\xb9\x5a\x61\xb7\x72\x08\x9e\xc5\x7d\xa9\x5f\x2b\xac\x2e\x74\x19\x94\x5b\x73\x92\xf2\x8c\xdb\xd3\xdc\xec\x95\x16\xad\x11\x67\x81\x3c\x30\x71\xc2\x5e\x4b\x95\x13\x99\x80\xd5\x80\x43\x35\x62\x92\x76\x5b\xba\x74\x08\x46\x48\xc4\xb1\x13\x23\x84\x06\x84\xfe\xc0\x97\x5f\x5f\xe7\xc3\xec\xb1\xb2\x6e\xae\xf6\xc7\xdc\x7e\x12\x85\xd9\x4c\x6d\x97\x81\x47\x6b\x92\x79\xd4\x0b\x93\x8e\xbc\x10\x94\x5a\x27\x0e\x2d\x1b\xe7\xdf\x51\x39\x98\x4f\xeb\xc3\xd6\x75\x73\x2a\x0f\x0e\xbd\x62\xab\x55\xdd\xe6\x39\x1a\x85\xe1\x5a\x6e\xa3\x41\x14\xc0\xe5\xfb\xb1\xc3\xc3\xb2\xbe\xe6\x4a\x65\xd6\x7e\x9e\x64\x4d\xb5\xb1\x94\xcf\x01\x3d\x1a\x43\xdd\xee\x16\x5a\x9a\xbf\x8c\x0d\x96\x63\x25\xc2\xce\x33\x39\x50\xf2\x60\xde\x77\xdf\xa7\xa7\x70\xc8\xe4\xbb\xb2\xd9\x9d\xa2\x43\xe3\x39\xed\x5f\xcf\xc1\x76\xbc\x7e\x8e\xf6\xfd\x65\xf7\x71\xab\xb5\x82\xda\xf0\x05\xe2\x50\x99\x50\x55\x8d\x07\x83\xc0\x94\x74\xf6\x3e\xbf\x0a\xcb\xc1\x76\xd1\xad\x9c\xb6\xe5\xce\xa8\xd5\xcb\x96\x8b\x9e\xf6\xdd\xd3\x31\x17\x51\xad\x36\x8b\xf6\xe7\x97\x3d\x60\xad\x89\x25\x91\x35\x49\x1f\xff\xd3\x43\xef\x27\x5d\x8b\x0b\xce\x1d\xb0\x1f\xc9\x33\x53\xef\x4d\x2e\xe1\xa0\x52\xdf\x1e\x2a\xb9\x63\x33\xbf\xcc\xd7\x5e\x86\x16\x71\x24\xa4\x56\x1c\x90\x3a\x06\x97\xa0\x4e\x66\x45\xc8\xd4\x03\x9c\xdf\x9e\xcd\x28\xa8\x97\x97\x51\x59\x6f\xc5\x5c\xe4\xf2\x5b\xc9\x95\x0e\xfb\x4c\xf5\xed\xf8\xfb\xf6\xa3\xd1\x69\xe5\x5b\x37\x2d\x6d\x4e\xdd\x45\xf3\xde\xcf\x6e\x27\xa7\xeb\xe8\x50\xd0\xfc\xb5\xbe\xba\xbe\xec\x3f\x62\x71\x64\x20\x61\xd9\xd3\xf5\x02\xe4\xc9\x58\x65\x65\x22\xef\x55\xff\x04\xd8\x2b\xac\x71\x36\xac\x56\xc6\xfd\xe6\xe2\xde\x3a\x54\x82\x9d\xbf\x6d\x87\xcb\x53\xee\x58\x9f\xd9\x91\xf2\xcb\xef\x06\x35\x14\x0b\x97\x24\x9e\x49\x57\x03\x03\x79\x63\x98\x0c\xb0\xc1\xf7\xf3\x96\xae\x1e\x06\x0b\x48\xf1\x51\x77\x44\x96\xc4\x12\x25\xa0\x4e\x29\x77\x58\xd8\xc1\xf5\xb0\x9e\x60\xa4\x87\x52\xd8\x54\xa4\x72\x6d\x30\x19\x52\x6f\xdf\x38\xd7\x4b\xd9\x37\x55\xd3\x5c\xe5\x9f\xe7\x5b\xe6\xb0\xa1\x76\xd8\x3a\xd5\x9b\xd9\xfa\x8c\x77\xed\xcd\x71\x3c\x3e\x86\x61\x38\x5a\xff\xd8\x02\xa4\x2d\x7f\x85\xac\xb7\xca\xe8\x9c\x31\x6c\x4d\xd2\xaa\xff\x9e\xfc\xb5\xfa\x4d\x36\x18\xb2\xec\x09\x91\xf1\xdb\xa6\xfa\x89\xfc\xf5\xc2\xf8\x2e\x7f\x11\x44\xe9\x17\xe5\x6f\xca\x32\x90\xac\x00\x24\x01\x43\x11\x07\xad\x7d\x9e\x3b\x97\x01\xad\xa7\xcb\xf3\x6d\xd6\xef\x62\xb3\xd8\x9d\xc2\xa0\xb1\x69\x35\x73\x74\xfd\x7e\xdc\x8b\xab\x8d\xba\xad\x11\xed\x7a\xab\xfa\xac\x93\x9f\x80\x5c\x6b\x51\xb9\x1e\x2c\xae\x99\x67\x6e\x3b\xb5\x8f\xd7\xf5\x64\xf0\x4a\x2a\xf8\xbe\x33\xd3\x15\xfc\x88\xa0\xa0\x0a\x62\xac\x33\x46\x12\xd4\xc8\xa7\xa5\xd8\x5d\xf1\x79\xc4\x05\x14\xed\xb9\x39\xe8\xf5\x4a\x41\x28\x95\x01\xec\x1a\xf7\xc5\x3e\xef\xcf\xed\xee\xfa\x15\x8b\x55\xdd\x57\x23\x82\x47\xcb\x2a\x8c\x4c\x16\x3d\x59\x93\xa8\x01\x26\xd5\xca\xd1\x05\xba\x0f\xc4\xd7\x17\x77\x84\xd2\x73\xdb\xce\x64\xb2\xb7\xde\xa1\xb1\x1f\xed\x73\xf2\x66\x90\xe7\x2d\x17\xce\x2f\xcd\xbb\xb6\xbb\xf8\x2c\x17\x76\x54\x3c\xf4\xa3\x7b\xeb\x78\xe9\x86\xd7\x4b\x0b\x5e\x34\x00\x89\x15\x50\xe7\x93\xf8\x77\x70\x28\xd0\xa0\xde\x5f\xdf\x7a\xbb\xa6\x7b\x6c\xa6\x97\x7b\xbd\x97\x77\x8f\x28\x6c\x07\x83\xc6\xc6\xaf\xde\x90\x78\xcd\x8b\xde\x68\x55\xf0\xee\x3c\xbf\x34\x9b\x51\xed\x52\xde\x6f\xaa\xfe\x7a\xa9\xb4\xb6\xa5\x52\xaf\x3e\x3c\x7c\x57\x91\x61\x50\x67\x14\x01\x10\x54\x34\x01\x0c\xd3\xe5\x02\x47\xde\x22\x02\x22\x3b\x6f\xc0\x71\x82\xc5\x4c\x5b\x00\xb3\xb0\x58\xef\x40\x8c\x21\x9b\x54\x9d\x48\x57\x84\xc6\xce\xc3\x83\x7a\x71\xc6\x1b\x10\x41\x63\xdf\xcf\x5d\xba\x22\x54\xbd\xa2\x53\xb2\x5e\xac\xba\x18\xbe\x4d\x82\xe7\xfe\xf4\x4e\xbc\xae\x1e\xf9\xc1\x63\xb7\xb5\xa3\x20\x5f\xba\xac\x39\x3a\x6f\x8b\x95\xdc\x73\xba\xcb\x05\x93\x6b\x71\xf1\xdd\x2a\x58\x6b\x62\xb8\x55\x03\x04\xfe\x0f\x7c\x83\x4f\xe9\x50\x47\x88\x68\x8d\xb3\xe0\x62\x31\x4a\xe2\x13\x2a\x44\x5f\xad\x0a\x06\xb5\xf5\xb1\x3a\xed\xd8\xf1\xb4\xb2\x3a\xb8\x43\x8e\x24\xbb\x2c\x4c\xb7\xbd\xcd\xb2\x53\xc8\x74\xa6\xbe\xf7\xb6\xe0\xb5\xde\xf8\x5a\x3a\x0e\xaf\xc3\xd5\xae\x3f\x29\x61\xae\xdb\x3f\xd7\xb3\xf3\xdc\x0d\xa6\xe7\x7e\xa3\xed\xe9\x15\xeb\xd1\x21\xb0\x18\x36\xc4\xb1\xf3\xfe\x03\xfa\x73\xf3\xcc\xcb\xe5\x56\x9c\xb5\x1e\x51\xe3\x36\x68\xb0\xcd\xcf\xb2\xeb\xdd\x20\xe4\x6a\x69\xb9\x7f\x5e\x26\x2f\x07\x4f\xbe\x58\x06\x39\x6b\xd9\x82\x05\x67\x1d\x11\xa1\xa3\x04\xb4\x4d\x57\xf1\xab\x01\x8b\xd6\x89\x15\x44\xa0\xf7\x43\xfe\x9b\x1a\x8c\x21\xb6\x71\x40\x9e\x3d\x20\xc5\x30\x62\x7e\xa6\xc1\x62\xb1\xc5\x09\x1a\x8c\x3d\xc8\x2f\x6a\xb0\xcf\x2b\x82\xfe\xb0\x3d\xd2\xcb\x93\x46\xed\x76\x79\x74\x0d\x56\x7e\xce\x99\xdd\xa0\xd2\xef\x5c\xdb\xd9\x6a\xa5\x30\x78\x85\x67\x6f\xad\x2a\x00\xfb\x04\x50\xf8\x74\x65\x22\xba\x8e\x82\xeb\x70\x5a\xa7\x7a\x7b\xda\x3a\xd3\xd6\x65\xce\xeb\x22\x5d\xdc\xbd\x5e\x94\xfe\x16\xed\xf0\x3f\xa9\xd3\x81\x94\x9c\x90\x13\xaf\xce\x3a\x8f\x09\xbd\x91\x74\x51\x10\xac\x30\xb9\x98\x06\xbd\x75\x4e\x35\xe9\x84\xa4\xcb\x85\xb1\x12\x88\xd1\x88\x8c\x8a\xaa\x35\x98\x64\x4e\xd3\xe5\x42\x0b\x31\x11\xb1\xb0\x22\x20\x58\x48\xae\x01\xa7\x2b\x4a\xec\x3f\x8b\xc0\xfc\x4d\x9e\x21\x26\xb0\xf1\xa7\x17\x61\xbd\xa2\xd2\x76\x3e\x2d\x6f\xd4\x3d\xee\x2e\x2a\x5d\x1e\x93\xd6\x7d\x5f\xf4\xdd\xc2\x62\xb6\x3d\xdf\x6b\x2f\x64\x94\x50\x84\x4d\x97\xfe\x11\x55\x4d\xac\xc0\xac\x4b\x70\x3d\xe9\x1a\x00\x6b\x90\xbd\x25\x41\x76\xc6\xc7\x8b\x9d\xc0\x85\xe9\x1a\x00\x6b\xd0\x79\x6f\x58\xdc\x9f\x58\xf8\xcf\x39\x00\x26\x03\x28\xe0\xac\x11\x9f\xa8\xfb\xd2\xd5\xff\x2c\x44\x64\xc9\x1b\xf1\x40\x09\x45\xb0\x74\x19\xd9\x29\xc7\x62\x8f\x8d\x4b\x80\xba\xdf\xec\x08\x2a\xa8\x03\xc3\xc2\x68\x40\x18\xad\xa7\x9f\x76\x04\x63\xde\xf5\xef\x74\x4c\xc6\x93\xfe\x22\x1d\xd7\xcb\xe3\x52\x6b\x70\x98\xa3\x2e\xa6\xea\x83\xcb\xf5\x7e\x1f\xf6\x8a\x8f\xa3\xbd\x9f\x87\xb9\xd2\x5d\x67\x6f\xc5\xd2\xe2\xa4\x90\x71\x53\xdf\xe7\x45\xa6\xb4\x2c\xac\x72\xf5\xe1\x7e\x98\xcd\x3f\xea\xb2\xc9\xd5\xc3\x40\x3a\xaf\x25\x11\x65\x0f\x9a\xd0\x25\x49\xf9\x3b\x91\x53\x12\x12\x96\x84\xfa\x70\xca\xe8\x10\x5b\x73\xeb\xc8\x09\x3a\x47\xff\xb8\xa3\x2f\x77\xe9\xe0\x9d\x63\xf4\x82\x8c\xca\x5f\x7e\x46\x63\x52\x56\xb4\xe4\x19\x63\x7b\xf8\x07\xc8\x68\x57\x8c\x2e\x5d\x0e\xe6\x54\x72\xf7\xa8\x9d\xbf\x3d\xe7\x8b\xc6\xa6\xd6\x98\x53\xd9\x56\xb7\xed\x20\x3b\x7b\x8d\x30\xd8\x2f\x66\x23\xc7\x24\xce\x20\x38\xaf\xde\x5a\x78\xff\xc1\x69\xd3\xbf\x45\x87\x8c\x82\x31\x31\xfd\x91\x86\xd0\xe7\x7a\x52\x5e\x0c\x03\x38\xeb\x9d\x27\xcb\xde\x7d\x7d\x51\x84\xd9\x33\x3a\x43\x4a\xc6\x03\x31\xa2\x49\x50\xc3\xe9\xca\x71\x74\x0e\x1d\x41\x8c\x77\x42\x49\x41\xa5\x74\x9d\x8f\xb5\xc6\x00\x8b\x55\x8f\x00\x62\x93\x26\x90\xae\x1b\xf0\x06\x2d\x1a\x56\x07\x6c\x0c\x00\xc9\x1f\x68\x51\xd9\x1b\x66\x4e\xd5\x5d\x88\xc7\x60\xb1\xc9\xf7\xba\x41\xe6\x5e\x6f\xef\x87\xf7\x06\x44\x8b\x5b\xb0\x28\xd3\x8b\x0a\x7d\x3f\xf6\xbf\x43\xc9\x5e\x55\x2c\xb2\xaa\x27\x8e\xe9\x19\xe3\x63\x86\x3f\xa3\x64\x32\x9e\x13\x22\x85\x84\x5e\x7f\x35\x52\x98\xb2\x72\x06\xc3\xca\xdf\x4a\x57\x7f\xa2\x85\xf8\xbc\xf5\x9a\x8b\x60\x84\x15\x80\xa8\x99\x39\x60\x3b\x3f\x29\xed\xd6\xbc\xaa\x69\x63\x3d\xf7\xcf\x97\x1d\x42\xe0\xbc\x98\x2f\x6f\x9c\x5a\x70\x84\x44\xd6\x27\x14\xea\xd3\x3d\x93\xfe\x5b\xa9\x16\x93\x44\xc8\x98\x2e\xf7\xac\x6e\x3b\xdb\x2e\x6c\x26\xc7\x45\xb5\x5a\x38\xd4\x2a\xf5\x51\x3f\x3f\xa8\x56\xaa\xeb\xf6\xe9\xed\x23\x6f\xe7\x15\xbb\xe9\xb5\xfb\xfb\xbd\x46\x8d\xc9\xe4\x50\x26\x5b\x39\x94\x5a\xd2\xbc\xd4\x3b\xd7\xf5\x7c\x53\xfa\x71\x29\x22\xe5\xbe\xbc\x67\x0f\x26\xfe\x00\x6c\xd5\x59\xf4\x89\xd9\xaf\x54\x49\xd0\x59\x64\x2f\xdf\x9a\x13\x31\x08\x25\x85\x55\x53\xed\xfe\x39\x23\xde\x32\x27\x74\x64\xd2\xed\x46\x29\x3b\x27\x96\xc1\x0a\x32\x58\xf0\x49\x66\x34\x55\xf6\x27\x56\x8f\x46\x00\xc5\x39\x15\xa5\xc4\x20\x5a\xba\xec\xef\x51\x45\xd4\x5a\xab\x84\x14\xe3\x6f\x92\xe3\x48\x57\xf3\x12\x5a\xeb\xc0\xc6\xf6\x50\xde\xcb\x3f\x29\xeb\x7d\x83\x86\x21\xde\x07\x4c\xc2\x49\xcb\x9f\x6e\x2b\x42\x08\x85\xc9\x88\x55\xe3\x7d\x92\xdd\x49\xb9\x0e\x6a\x2d\x91\x77\x4e\x54\x0c\x3a\x6f\x13\x0a\x42\xbf\x1b\xd6\x75\xce\x29\x1a\x83\xf1\x0e\x17\xe0\x6f\x2d\xdf\x9f\xe8\x80\x18\x03\x13\x74\x80\x57\xf8\xd5\xb0\x6e\xca\xac\x48\x46\x10\x44\xc4\x27\x74\x16\x82\x41\xe6\xde\x74\x15\xb8\x76\x6f\xf3\x41\x3d\x37\x2a\x15\xec\x6e\xef\x1b\x92\x9d\x67\xd5\xaf\x1a\x99\xf0\xfb\xa1\x37\x2d\x5c\x44\xfc\xac\x2e\x6f\xf9\xe0\xbe\x09\xdb\x41\xb1\x75\x1e\xd6\xb8\x46\xcb\xb0\x72\xd9\x03\x4f\x5f\x6b\x38\x18\x1f\x15\xb6\x9a\xd4\xc0\x4e\xd7\x9d\x5b\x15\x76\x44\xec\xbc\x90\x3a\x8d\x55\xd0\x97\x43\x05\x38\x21\x54\x34\x5e\x2c\x0a\x25\x8c\x9f\x2e\x5c\x80\xb0\x80\x51\x74\x49\xd1\xfe\x94\x9d\xaa\x71\xec\x91\x0c\xc6\xff\x01\x4a\x10\x09\xe9\x12\x85\x10\xa8\xf1\x6c\xd5\x5a\xe3\xac\x25\x48\x42\xab\x94\xfb\x05\xce\x5a\x91\xf8\xf0\x39\xc3\xaa\xf1\x7a\x24\xc4\xab\x3e\x6d\x94\x0e\xd5\x2d\x2f\x86\x9d\xa8\xdb\x28\x21\xad\x57\xda\x5f\xd0\x68\xdf\xd6\xd6\x39\x53\x68\xde\x67\x8d\x79\xff\x27\xbd\xe3\x54\x3d\xc7\x57\xcb\x51\x64\x32\xce\xa1\x92\x65\x22\x87\x60\x12\x7a\x81\xe9\x72\x12\x1b\x72\xde\x59\x67\x44\xd1\x32\x42\x42\x3c\x20\xe5\x72\x80\xa8\x15\xc3\x4e\x7d\xd2\x95\xa5\xdf\xb1\xc5\x1e\x99\x09\x90\x2d\x83\x51\xef\xc0\x21\xfd\xbc\x71\x1c\xf3\x5e\x42\x78\x8f\x41\xe9\x57\xc3\x7b\x29\xdf\xb4\xf3\x84\x2c\x62\x34\x41\x3d\xa4\xcb\x86\xc8\x42\x09\x09\x9e\xcf\xa7\xe8\x9b\x9b\xcc\x6d\xb1\x1c\x66\xee\x03\x82\xf5\xec\x78\x5b\x8d\xb6\xad\xfc\xfc\x62\x17\xcb\xf9\x78\x96\x1b\xfb\x1f\x9f\xc8\x74\x2f\x4d\x90\x7e\x79\x35\x8e\x45\xd9\x73\x2c\xdd\x2c\x42\x62\x46\x2a\xd5\x1e\x1d\x80\xfb\x62\x5d\x61\xd5\x08\x18\x60\x55\x43\xc2\x0a\x49\x97\x15\x53\x0e\x4b\x0b\x28\x89\x10\x19\xb0\x0c\x68\x3c\x24\x85\x12\x3e\xcd\x35\xab\x4e\x7f\x38\x3a\xd5\x06\xd9\xed\xf3\xf8\x80\x72\x7d\x10\x8e\xe6\xc5\x49\x61\x73\xef\xef\x36\xf7\x6a\xd8\x6c\xbf\xb6\xa2\x89\x44\xc1\x30\x80\x18\x90\xc4\xbc\x76\xf1\xb0\x7a\xee\xeb\x8f\x12\x46\xcd\x53\xf6\xd9\x5b\xdb\xba\x9d\x5c\x1b\xfb\x48\x1e\xd9\x59\x54\x2c\xd7\x2a\xdf\xcf\xe0\xb4\x7b\xc0\x64\xdd\xbb\x15\x8a\xd5\xe7\xa1\xbb\x9f\x6c\xfa\x61\x00\xa3\xf5\x0c\xaa\xb3\x6c\x61\x7d\xf3\xaf\xd0\xeb\x94\x3c\x59\x31\xd6\xe0\xb7\x7b\x84\xbf\xbf\x02\xf3\x91\x87\xe7\x6e\x93\xbd\xe5\x27\x9b\xed\xb0\x70\x92\xe6\x72\xb0\x18\xb5\xb2\xe7\x63\x63\xb4\xad\xce\xcb\xaf\x49\x7d\x03\x6c\x7c\xac\xef\xac\x05\xe3\xf5\xf7\xed\x28\xc0\xb4\xf3\xb8\x54\x5b\xf3\x79\xa0\x93\xa5\xe4\x6f\xb0\xed\x9d\x0a\xc7\xa8\x1e\x16\x9e\x9d\xfa\x7c\x74\x1b\xbf\x8a\x2c\x32\x5e\xad\x37\x5e\x3c\xfe\x99\x5e\xc0\xa7\xd8\x9f\x8d\x02\x5a\x76\xa4\x84\x68\x00\x38\xf1\x92\x48\xba\x3a\x17\x80\x8d\x25\x75\xde\x1a\x15\x16\xf6\x7f\x22\x20\x79\x6e\xef\xcf\x93\xc9\xd4\x46\xc5\xf3\x7c\x17\x4c\x6e\xfb\xfb\x65\x39\xcb\xad\xa4\x38\xb8\x16\xa6\x0d\xc5\xe7\xab\xd4\xf6\x5e\x1c\x18\x8f\xa8\x2c\x6c\x7c\xc2\x49\x4c\xf7\x1e\xaf\x05\x61\xc3\x2c\x4c\x60\x12\x36\x61\xca\x32\x9b\xd5\x11\x7c\xfb\xd9\x96\xfd\xb7\xa4\xc4\x97\x07\x75\x0d\x5a\x72\x00\x31\x1c\x5b\x10\x2f\xf8\x87\x33\x7c\x5e\xd4\x83\x2a\xc5\xfa\xd2\x8a\x55\x35\xff\xc4\x04\x7f\x2c\xc5\x62\xcd\x95\x90\xe1\x63\x56\xff\xcb\x19\xbe\xb5\x6c\x2b\xd9\x0a\x45\x4b\x6a\x64\x1b\xf3\xfb\xa5\x3e\x5c\x15\x7a\xfb\x46\xb6\x5c\x5b\x89\x04\xbd\xc9\xdb\xce\xed\x6c\x4e\xdb\xdc\xa5\xd1\x29\x36\x83\xd9\x79\xba\x6a\x57\x7b\xbe\x37\x71\xbd\xe1\x7d\x7e\xab\x76\xb8\xf3\xfc\xb1\x36\xa9\x14\x32\x97\x67\xf1\xfe\xd8\x4f\x87\x2e\x3f\xb0\x95\x13\x35\xc3\x51\x6e\x9e\xbb\x3c\xa2\xea\x69\x9a\x1f\x0e\xdf\xdc\x49\x29\xec\x4e\x9a\x1d\x9b\xeb\x94\x9a\xc5\xa3\x3e\x66\xd1\x64\xf5\x58\xd7\x8e\xe3\xe9\x2a\x6c\x56\x4a\xed\xe0\xbb\x7d\xaa\xac\x4a\x36\xe9\x02\x45\xba\xaa\x13\xd1\x82\x88\x57\x93\xb0\x33\xca\xc7\xd9\x1e\x4e\x65\xa5\x5b\x3d\x6c\x0d\xc6\x6e\xac\x61\x7f\x96\x1f\xad\x4b\xcd\x65\x77\x13\xdc\xa8\xf5\x2e\xc8\x46\x95\x56\x84\x41\xbb\x94\x2f\xce\xcf\xd9\xc6\xe2\xd2\xd4\xda\x48\xf2\x97\x31\x96\x91\x32\xd1\xf9\x45\x90\x11\x88\x0a\x99\x98\x2e\x8d\x68\xec\x84\xbf\xfa\xa5\x01\x63\x3c\xaa\x18\x4f\xea\x63\x98\x52\xe2\x04\x91\x96\xb2\x64\x02\x31\xa4\xde\x79\xf2\x4e\x8c\x25\x93\x14\x9d\x4b\xb7\x78\x0a\x44\x8e\x2d\x10\x8b\x77\x49\x5e\xed\xb3\x18\x05\x50\x6a\x4f\x0a\xb9\x5c\x65\x7f\xde\x94\x4f\xb7\xe8\xbe\x6d\x85\xd3\x6a\xae\x3f\xce\x0f\xef\xa1\xae\x9a\x3d\xfe\xae\x69\xfd\xd5\xb1\x6a\x64\x41\x04\xaf\xc6\x89\x5a\x93\x24\xcc\x8b\xe1\x3d\x9f\x19\x2f\xea\xab\xc3\xe5\xa9\x53\xaa\x75\xa3\x2b\xb7\xf3\xe1\x3a\x20\x37\xbf\x4c\xcb\xe7\x37\x5a\xba\xef\x5c\x6d\x9f\xb9\x4f\xa4\xdd\x2a\x1c\xc4\xae\x4a\x9d\x69\x13\xc2\xd6\x29\xaf\x63\x9d\x9d\x56\x8d\xe3\x8f\xe1\xe5\xd3\x56\xeb\xb2\xad\xaf\x67\x83\x83\xb5\xbd\x61\xe9\x98\xeb\x94\x97\x83\x76\x61\xf2\x38\xf4\x9e\xfb\xe2\x79\x54\xae\x5f\xca\xff\xc9\xe2\x87\x00\x3b\x70\x14\x6b\x6f\xf1\x2a\x26\xe9\xdd\x96\x74\xd5\x0f\x7a\xe7\x30\xd6\x5e\x68\xd5\xa1\x4f\x28\x6f\xa5\x4b\xbc\xce\x5b\x36\xde\x80\x47\x2b\xa2\xb1\xfe\xf8\x13\x53\xf8\x94\xfc\x00\x00\xe7\x5c\x0c\xb1\xea\xc8\x92\xe1\xa4\xba\x42\xba\x46\xc8\xb2\x1a\x46\x76\x28\x49\x1d\xa9\x94\x73\x7f\xaa\xde\xa9\x07\x64\x24\xf5\x49\x67\xfc\x37\x75\x8f\x35\x88\xc0\x04\x10\x1b\x5e\xe3\xe8\xdb\xa3\x1f\x3f\xd1\x3d\xac\x3e\x21\x2c\x29\xd6\xd8\x5f\x0d\x4b\xb6\x3b\xf7\xe0\x5a\x18\x8d\x77\xf3\xce\xa5\xbe\x1e\xec\x7b\xd5\xbc\xef\xcc\xc2\xf6\x16\x7d\xe1\xb4\x88\x76\x6f\x8b\xf6\xe8\x4d\x33\xb3\xb1\x5b\x6f\x0a\x95\x76\x63\x3d\x2e\x4f\x07\xcf\xec\xd4\x1d\x76\x41\x74\x2b\x9c\xca\x85\xde\xf6\x85\x92\x2d\x91\x78\x0f\xc0\x09\x6a\x20\xe5\x9b\x26\x16\x55\x98\x0d\xfe\x89\x42\xd4\xa3\x99\xf5\x9d\x80\x4b\x93\x00\x4a\xf5\x20\x28\xb8\xa9\xbd\x8d\x7d\xb8\x0c\x77\xae\x12\x45\xa7\xc6\xe0\xc7\x99\x9d\x94\x93\x0a\x56\x0d\x12\x91\x73\xf1\x0e\x72\x0c\x49\xf7\x44\x52\xf6\x05\x8e\xc5\x19\xeb\x55\x2d\x09\x25\x78\xd3\x74\x95\x1f\x82\x67\x4f\xc8\xd6\x5b\x71\xea\xec\x97\xf7\xe0\x9c\x35\xe4\xbd\x47\xef\x90\xc8\x3a\x24\x95\x2f\x7f\x52\xc0\xc6\xfc\x40\x9e\xd9\x89\x08\x71\x52\xa9\x2c\x65\x19\xe4\x8c\x35\xc4\x86\x1d\xaa\x41\x35\x5f\x7f\x93\x95\x01\x88\x2d\x7a\x00\xc4\x24\x7f\xfe\x7b\x4d\x02\xb2\x9e\x85\x41\xd5\x2b\x8a\x07\xfe\x27\x11\xf4\x63\x84\x16\x6b\x20\x21\x3b\x27\x64\xe8\xff\xc6\x73\x7c\x84\xa8\x12\xeb\xf4\x84\x24\xd9\xb8\x8b\xd9\xf5\xa5\xdc\xd8\x37\x4f\x07\x7f\xa9\xf0\xe4\x72\x9b\x5d\x9f\x85\xe3\x66\x1f\x3c\xf1\x59\xc8\x9d\xdf\x3c\xf1\xad\x59\x3a\xef\xd6\xd5\x85\xda\x5e\xd8\x1b\x75\xab\x7a\x73\x95\xb5\x2c\x83\x4c\xcf\x5a\xbf\x2a\x94\x5f\xbb\xf5\x0c\xe0\x21\xa6\xf2\xc4\x8f\x95\x72\x37\x4b\xd0\xab\x37\x6c\x01\x9d\x4d\x32\x29\x29\x47\xbb\x8c\xb7\x80\xe2\xbc\x10\x2a\x27\xfc\xfa\xcf\xdf\xeb\x0b\x81\xfa\xe7\x7e\x14\x05\xcf\x06\x0c\x64\x3e\x86\x71\xc6\xce\xf7\x41\x27\x6b\x17\x57\xb7\x7d\x0c\x7f\x72\xb9\x29\xe5\x7b\x75\xc0\x96\x0d\x18\x15\xf0\xb1\x8e\xff\xfa\x40\x15\x78\xe3\x10\x3d\x8b\x38\xf2\xec\x20\x61\xcd\x53\x2e\x4f\x08\x02\x1b\x23\xc6\x25\xc6\x36\x53\x0e\x68\x58\x66\x0f\x60\x1c\x0a\x8b\x97\xa4\x80\x46\xca\x95\x11\x56\x50\x47\xb1\x60\x55\x60\xeb\x20\xa9\x7f\xfc\x7b\xf8\xcc\x9e\xc5\xb2\x67\xf3\xed\xda\x24\x3a\xb0\xbf\x80\xcf\x64\x28\x21\xd3\x24\x6a\xfc\xaf\x66\x9a\x3e\x2f\x26\x4f\xb3\x30\x77\x28\xd4\x8e\x57\x17\xe8\x62\x50\xaf\xcc\x9b\xf4\x68\xeb\x92\x1e\xdb\x29\xdf\x17\x9d\xd9\x8f\xad\x76\xda\x1d\x37\xef\x14\x8d\x92\x18\x44\x71\x09\xa1\xc3\x94\x9f\x21\x70\xc6\x19\x01\x13\x1f\x54\x45\x4d\xba\x6a\x93\x2e\x31\x88\xb2\x3a\x4c\x7a\xf2\x26\x5d\x7b\x2d\x64\x2d\x58\xef\x1c\x7b\x11\x91\x04\x84\x6e\xad\x42\xcf\xb7\x53\xab\x90\x9b\x5f\x3b\x72\xbe\xae\xd7\x97\x6b\x6b\x2a\x85\xfd\xee\x99\x5b\x45\xd9\xc2\xdb\x2b\x7c\xf7\xad\xb5\xfd\x90\x9f\x93\x7d\x6f\x59\x59\x3f\xba\xe5\xdb\xba\x3e\x5d\xe4\x1f\xd3\xe1\x66\x1b\x62\x05\xa3\x17\x42\x24\x46\xf0\x40\xe0\xac\xd7\x3f\x52\x5d\xf8\x14\x3c\x13\x0b\x19\x45\x76\x3e\xe9\x0a\x64\xda\x0f\xc4\xa2\x2a\x09\xa2\x80\x07\x8c\x91\x32\x49\x8f\xa4\xcb\x0e\x02\x08\xea\x51\x10\x1d\x1a\xf6\x98\x60\xe1\xd2\x95\x63\xc0\x5f\xde\x2a\x60\xef\x95\xc1\xaa\x4d\xb8\x5d\xfe\x7b\x54\x60\xc1\x90\x75\x86\xd8\x3b\xaf\x24\xd6\x7d\xbb\xb9\xf3\x13\x2a\x50\xe3\x13\xf2\x3c\xde\x59\xfb\xab\x79\x9e\x94\xbf\xd0\xdb\x22\x4d\x9e\xf9\x61\xe4\x0b\xa3\xe0\x86\xc3\xdb\xbd\xb6\xed\x8f\x87\x9b\xab\x73\xad\xde\xa1\x71\x6c\xe5\x1c\xbf\xa5\x78\x96\xd9\xe5\x72\x8b\xd9\xde\xec\xda\xeb\x3d\x26\x8f\x43\x6b\xa1\xab\xfe\xd2\x6f\xed\x13\x96\x83\x5e\xaf\xf8\x12\xaa\x24\xff\xed\x39\xa4\x2f\x7f\xab\x0d\xbc\x15\x2b\xca\x46\xcc\x97\x37\xda\xc1\x00\x7b\x70\x64\xd9\x23\x09\xfb\xaf\xbf\x6c\xeb\x88\xbd\xaa\x03\x6f\x41\x9d\x82\x8d\x7d\xc2\x97\xab\x45\x47\xde\x78\xf5\xd6\x39\x36\x49\x79\xd2\x4f\x63\xe1\xec\x5c\xe8\xb6\x61\x6e\x0b\x8b\xc1\x0e\xd7\xdb\x43\x96\x23\x3b\x75\x93\x56\xbe\x5c\xe8\xe4\xb6\xbe\x3a\x78\x6f\x74\x27\x61\xf0\xa7\xb5\xd6\xf1\x96\x2b\x5d\xef\xf3\x70\x98\x2b\x5f\x27\xd5\xc5\x70\xd7\x5d\x1e\x7d\x3b\x3a\xfb\xe6\xb5\x52\xbd\x51\xb0\xfa\xb1\xd6\xea\xef\x27\xcf\xca\x63\xb7\x3c\xc2\x6e\x15\x49\xef\xd9\x9c\xf6\xc9\xea\x63\xda\x5e\x04\x2e\xaa\x1c\x9b\xe5\x37\x13\x78\x58\x4e\x9f\x77\xe8\xf7\xe6\x51\xc6\xfb\xeb\x65\xdb\x5d\x2f\xbb\x4d\xc6\x5a\xb7\x54\x5c\xe6\xd7\x83\xc6\x4f\xc6\x4b\xb7\x35\xab\x0e\xd4\xb3\x4d\x54\x37\xe9\xaa\x0b\x0f\x62\x08\xbe\xfc\x55\x2f\x6b\x00\x19\x12\xdf\x74\x48\xd9\x6d\x92\x01\xb2\xc6\xd8\xa4\xab\x08\xbf\xc9\x6d\x0a\x62\xc5\x58\xf1\x8c\x22\xc8\xf6\x5b\xbd\xf5\x5f\xdc\xf6\xdf\xff\x3f\x00\x00\xff\xff\x65\xf8\xb5\x8e\x17\x62\x00\x00")

func dip_dataJsonBytes() ([]byte, error) {
	return bindataRead(
		_dip_dataJson,
		"dip_data.json",
	)
}

func dip_dataJson() (*asset, error) {
	bytes, err := dip_dataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dip_data.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dip_data.json": dip_dataJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"dip_data.json": &bintree{dip_dataJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
